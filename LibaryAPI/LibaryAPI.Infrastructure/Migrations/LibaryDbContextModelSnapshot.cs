// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace LibaryAPI.Infrastructure.Migrations;

[DbContext(typeof(LibaryDbContext))]
partial class LibaryDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.1")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("LibaryAPI.Infrastructure.Models.Books.BookModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Author")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int>("CountPage")
                    .HasColumnType("integer");

                b.Property<DateTime>("CreatedTime")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int>("Price")
                    .HasColumnType("integer");

                b.Property<string>("Publisher")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<DateTime>("UpdatedTime")
                    .HasColumnType("timestamp with time zone");

                b.HasKey("Id");

                b.ToTable("Books");
            });

        modelBuilder.Entity("LibaryAPI.Infrastructure.Models.Readers.ReaderModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<int>("AccountNumber")
                    .HasColumnType("integer");

                b.Property<DateTime>("CreatedTime")
                    .HasColumnType("timestamp with time zone");

                b.Property<DateTime>("DateOfBirth")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("FullName")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<DateTime>("UpdatedTime")
                    .HasColumnType("timestamp with time zone");

                b.HasKey("Id");

                b.ToTable("Readers");
            });

        modelBuilder.Entity("LibaryAPI.Infrastructure.Models.Readers.ReaderNewsletterModel", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedTime")
                    .HasColumnType("timestamp with time zone");

                b.Property<DateTime>("DateOfReceipt")
                    .HasColumnType("timestamp with time zone");

                b.Property<int>("IdBook")
                    .HasColumnType("integer");

                b.Property<int>("IdReader")
                    .HasColumnType("integer");

                b.Property<DateTime>("ReturnDate")
                    .HasColumnType("timestamp with time zone");

                b.Property<DateTime>("UpdatedTime")
                    .HasColumnType("timestamp with time zone");

                b.HasKey("Id");

                b.ToTable("ReadersNewsletter");
            });
#pragma warning restore 612, 618
    }
}

